{
  "version": 3,
  "sources": ["../../TwoPointer/ReverseSentence.ts"],
  "sourcesContent": ["function reverseWords(sentence) {\n  let str = sentence.trim().replace(/  +/g, ' ').split(' ')\n  let reversed = []\n  for (let item of str) {\n    reversed = [item, ...reversed]\n  }\n\n  \n  return reversed.join(' ')\n}\n\nconsole.log(reverseWords('a good   example'))\n// \"World Hello\"\n\n\nfunction reverseWord(sentence) {\n    // Replace multiple spaces with single space\n    sentence = sentence.trim().replace(/  +/g, ' ');\n    // We need to convert the input strings\n    // to lists of characters as strings are immutable in JavaScript\n    sentence = [...sentence];\n    // To reverse all words in the string, we will first reverse\n    // the entire string.\n    let strLen = sentence.length;\n    sentence = strRev(sentence, 0, strLen - 1);\n\n    //  Now all the words are in the desired location, but\n    // in reverse order: \"Hello World\" -> \"dlroW olleH\".\n\n    // Now, let's iterate the sentence and reverse each word in place.\n    // \"dlroW olleH\" -> \"World Hello\"\n    let start = 0,\n        end = 0;\n\n    while (true) {\n        // find the start index of each word by detecting spaces.\n        while (start < sentence.length && sentence[start] == \" \") start += 1;\n\n        if (start == strLen) break;\n\n        // find the end index of the word.\n        end = start + 1;\n        while (end < strLen && sentence[end] != \" \") end += 1;\n\n        // let's call our helper function to reverse the word in-place.\n        sentence = strRev(sentence, start, end - 1);\n        start = end;\n    }\n    return sentence.join(\"\");\n}\n\n// a function that reverses a whole sentence character by character\nfunction strRev(str, startRev, endRev) {\n    // Starting from the two ends of the list, and moving\n    // in towards the centre of the string, swap the characters\n    while (startRev < endRev) {\n        let temp = str[startRev]; // temp store for swapping\n        str[startRev] = str[endRev]; // swap step 1\n        str[endRev] = temp; // swap step 2\n\n        startRev += 1; // move forwards towards the middle\n        endRev -= 1; // move backwards towards the middle\n    }\n    return str;\n}"],
  "mappings": "AAAA,sBAAsB,UAAU;AAC9B,MAAI,MAAM,SAAS,OAAO,QAAQ,QAAQ,KAAK,MAAM;AACrD,MAAI,WAAW;AACf,WAAS,QAAQ,KAAK;AACpB,eAAW,CAAC,MAAM,GAAG;AAAA;AAIvB,SAAO,SAAS,KAAK;AAAA;AAGvB,QAAQ,IAAI,aAAa;AAIzB,qBAAqB,UAAU;AAE3B,aAAW,SAAS,OAAO,QAAQ,QAAQ;AAG3C,aAAW,CAAC,GAAG;AAGf,MAAI,SAAS,SAAS;AACtB,aAAW,OAAO,UAAU,GAAG,SAAS;AAOxC,MAAI,QAAQ,GACR,MAAM;AAEV,SAAO,MAAM;AAET,WAAO,QAAQ,SAAS,UAAU,SAAS,UAAU;AAAK,eAAS;AAEnE,QAAI,SAAS;AAAQ;AAGrB,UAAM,QAAQ;AACd,WAAO,MAAM,UAAU,SAAS,QAAQ;AAAK,aAAO;AAGpD,eAAW,OAAO,UAAU,OAAO,MAAM;AACzC,YAAQ;AAAA;AAEZ,SAAO,SAAS,KAAK;AAAA;AAIzB,gBAAgB,KAAK,UAAU,QAAQ;AAGnC,SAAO,WAAW,QAAQ;AACtB,QAAI,OAAO,IAAI;AACf,QAAI,YAAY,IAAI;AACpB,QAAI,UAAU;AAEd,gBAAY;AACZ,cAAU;AAAA;AAEd,SAAO;AAAA;",
  "names": []
}

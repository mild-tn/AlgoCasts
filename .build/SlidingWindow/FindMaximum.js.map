{
  "version": 3,
  "sources": ["../../SlidingWindow/FindMaximum.ts"],
  "sourcesContent": ["// Given an integer array and a window of size w, find the current maximum value in the window as it sliders through the entire array\n// Note: if the window size is greate than the array size, we consider the entire array as a single window.\n\nfunction max(arrayList) {\n  let max = arrayList[0];\n  for (let i = 1; i < arrayList.length; ++i) {\n    if (arrayList[i] > max) {\n      max = arrayList[i];\n    }\n  }\n  return max\n}\n\nfunction findMaxSlidingWindow(nums, w) {\n  let window = []\n  let endPointer = w\n  let start = 0\n\n  while (endPointer <= nums.length) {\n    let max = nums[start]\n    for (let i = start; i < endPointer; i++) {\n      \n    }\n    start++\n    endPointer++\n    window = [...window, max]\n  }\n\n  console.log(window)\n}\n\nfindMaxSlidingWindow([9, 5, 3, 1, 6, 3], 3)\n// [9, 5, 6, 6]\nfindMaxSlidingWindow([9, 5, 3, 1, 6, 3], 2)\n// [9, 5, 3, 6, 6]\nfindMaxSlidingWindow([10,6,9,-3,23,-1,34,56,67,-1,-4,-8,-2,9,10,34,67] , 2)"],
  "mappings": "AAGA,aAAa,WAAW;AACtB,MAAI,OAAM,UAAU;AACpB,WAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,EAAE,GAAG;AACzC,QAAI,UAAU,KAAK,MAAK;AACtB,aAAM,UAAU;AAAA;AAAA;AAGpB,SAAO;AAAA;AAGT,8BAA8B,MAAM,GAAG;AACrC,MAAI,SAAS;AACb,MAAI,aAAa;AACjB,MAAI,QAAQ;AAEZ,SAAO,cAAc,KAAK,QAAQ;AAChC,QAAI,OAAM,KAAK;AACf,aAAS,IAAI,OAAO,IAAI,YAAY,KAAK;AAAA;AAGzC;AACA;AACA,aAAS,CAAC,GAAG,QAAQ;AAAA;AAGvB,UAAQ,IAAI;AAAA;AAGd,qBAAqB,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI;AAEzC,qBAAqB,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI;AAEzC,qBAAqB,CAAC,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,KAAM;",
  "names": []
}

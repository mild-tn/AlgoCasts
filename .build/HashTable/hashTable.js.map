{
  "version": 3,
  "sources": ["../../HashTable/hashTable.ts"],
  "sourcesContent": ["// let user = {\n//   age: 54,\n//   name: 'Mild',\n//   magic: true,\n//   scream: () => {\n//     console.log('Ahhhh ha')\n//   }\n// }\n\n// user.age // O(1)\n// user.spell = 'Test' // O(1)\n// user.scream() // O(1)\n\nexport class HashTable {\n  data: Array<any> = []\n  constructor(size: number) {\n    this.data = new Array(size);\n  }\n\n  _hash(key: string) {\n    let hash = 0;\n    for (let i = 0; i < key.length; i++) {\n      hash = (hash + key.charCodeAt(i) * i) % this.data.length\n    }\n    return hash;\n  }\n\n  set(key: string, value: number | string) {\n    let address = this._hash(key)\n    if (!this.data[address]) {\n      this.data[address] = []\n    }\n    this.data[address].push([key, value])\n    return this.data\n  }\n\n  get(key: string) {\n    let address = this._hash(key)\n    let currentBucket = this.data[address]\n\n    if (currentBucket) {\n      for (let i = 0; i < currentBucket.length; i++) {\n        if (currentBucket[i][0] === key) {\n          return currentBucket[i][1]\n        }\n      } // O(n)\n    } // O(1)\n    return undefined\n  }\n\n  keys() {\n    if (!this.data.length) {\n      return undefined\n    }\n\n    let result = []\n    for (let i = 0; i < this.data.length; i++) {\n      if (this.data[i] && this.data[i].length) {\n        if (this.data.length > 1) {\n          for (let j = 0; j < this.data[i].length; j++) {\n            result.push(this.data[i][j][0])\n          }\n        } else {\n          result.push(this.data[i][0])\n        }\n      }\n    }\n    return result;\n  }\n}\n\n// \u0E17\u0E34\u0E49\u0E07\u0E04\u0E33\u0E16\u0E32\u0E21 \u0E23\u0E30\u0E2B\u0E27\u0E48\u0E32\u0E07\u0E01\u0E32\u0E23 For loop \u0E40\u0E1E\u0E34\u0E48\u0E21\u0E14\u0E36\u0E07\u0E04\u0E48\u0E32 key \u0E21\u0E32\u0E43\u0E0A\u0E49\u0E17\u0E35\u0E25\u0E30\u0E15\u0E31\u0E27 \u0E01\u0E31\u0E1A\u0E01\u0E32\u0E23 HasTable \u0E17\u0E35\u0E48\u0E21\u0E35\u0E01\u0E32\u0E23\u0E08\u0E31\u0E14\u0E2B\u0E21\u0E27\u0E14\u0E2B\u0E21\u0E39\u0E48 key \u0E17\u0E35\u0E48\u0E0B\u0E49\u0E33\u0E44\u0E27\u0E49\u0E41\u0E25\u0E49\u0E27 \u0E41\u0E25\u0E49\u0E27\u0E40\u0E2D\u0E32\u0E04\u0E48\u0E32\u0E21\u0E32\u0E43\u0E0A\u0E49\u0E2D\u0E31\u0E19\u0E44\u0E2B\u0E19\u0E40\u0E23\u0E47\u0E27\u0E01\u0E27\u0E48\u0E32\u0E01\u0E31\u0E19?"],
  "mappings": ";;;;;;;AAAA;AAAA;AAAA;AAaO,gBAAgB;AAAA,EACrB,OAAmB;AAAA,EACnB,YAAY,MAAc;AACxB,SAAK,OAAO,IAAI,MAAM;AAAA;AAAA,EAGxB,MAAM,KAAa;AACjB,QAAI,OAAO;AACX,aAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACnC,aAAQ,QAAO,IAAI,WAAW,KAAK,KAAK,KAAK,KAAK;AAAA;AAEpD,WAAO;AAAA;AAAA,EAGT,IAAI,KAAa,OAAwB;AACvC,QAAI,UAAU,KAAK,MAAM;AACzB,QAAI,CAAC,KAAK,KAAK,UAAU;AACvB,WAAK,KAAK,WAAW;AAAA;AAEvB,SAAK,KAAK,SAAS,KAAK,CAAC,KAAK;AAC9B,WAAO,KAAK;AAAA;AAAA,EAGd,IAAI,KAAa;AACf,QAAI,UAAU,KAAK,MAAM;AACzB,QAAI,gBAAgB,KAAK,KAAK;AAE9B,QAAI,eAAe;AACjB,eAAS,IAAI,GAAG,IAAI,cAAc,QAAQ,KAAK;AAC7C,YAAI,cAAc,GAAG,OAAO,KAAK;AAC/B,iBAAO,cAAc,GAAG;AAAA;AAAA;AAAA;AAI9B,WAAO;AAAA;AAAA,EAGT,OAAO;AACL,QAAI,CAAC,KAAK,KAAK,QAAQ;AACrB,aAAO;AAAA;AAGT,QAAI,SAAS;AACb,aAAS,IAAI,GAAG,IAAI,KAAK,KAAK,QAAQ,KAAK;AACzC,UAAI,KAAK,KAAK,MAAM,KAAK,KAAK,GAAG,QAAQ;AACvC,YAAI,KAAK,KAAK,SAAS,GAAG;AACxB,mBAAS,IAAI,GAAG,IAAI,KAAK,KAAK,GAAG,QAAQ,KAAK;AAC5C,mBAAO,KAAK,KAAK,KAAK,GAAG,GAAG;AAAA;AAAA,eAEzB;AACL,iBAAO,KAAK,KAAK,KAAK,GAAG;AAAA;AAAA;AAAA;AAI/B,WAAO;AAAA;AAAA;",
  "names": []
}
